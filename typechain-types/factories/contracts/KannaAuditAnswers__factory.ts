/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  KannaAuditAnswers,
  KannaAuditAnswersInterface,
} from "../../contracts/KannaAuditAnswers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stakePoolAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AnswerKeySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AnswerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Finalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "points",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "QuestionRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
    ],
    name: "getQuestionAnswers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "answer",
            type: "bytes32",
          },
        ],
        internalType: "struct KannaAuditAnswers.Answer[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
    ],
    name: "getQuestionAnswers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "answer",
            type: "bytes32",
          },
        ],
        internalType: "struct KannaAuditAnswers.Answer[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getQuestionIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
    ],
    name: "getQuestionPoints",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
    ],
    name: "getQuestionPoints",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
    ],
    name: "getQuestionWallets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
    ],
    name: "getQuestionWallets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getWalletAnswer",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getWalletAnswer",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getWalletAnswers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "answer",
            type: "bytes32",
          },
        ],
        internalType: "struct KannaAuditAnswers.Answer[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "questionAnswers",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "points",
        type: "uint8",
      },
      {
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
    ],
    name: "registerQuestion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "questionsUuid",
        type: "string[]",
      },
      {
        internalType: "uint8[]",
        name: "points",
        type: "uint8[]",
      },
      {
        internalType: "string[][]",
        name: "options",
        type: "string[][]",
      },
    ],
    name: "registerQuestions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
      {
        internalType: "string",
        name: "answer",
        type: "string",
      },
    ],
    name: "setAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
      {
        internalType: "string",
        name: "answerKey",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "alternatives",
        type: "string[]",
      },
    ],
    name: "setAnswerKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "questionsUuid",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "answerKeys",
        type: "string[]",
      },
      {
        internalType: "string[][]",
        name: "alternatives",
        type: "string[][]",
      },
    ],
    name: "setAnswerKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "questionsUuid",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "answers",
        type: "string[]",
      },
    ],
    name: "setAnswers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
      {
        internalType: "string",
        name: "answer",
        type: "string",
      },
    ],
    name: "setWalletAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "questionsUuid",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "answers",
        type: "string[]",
      },
    ],
    name: "setWalletAnswers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakePool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum KannaAuditAnswers.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPoints",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001805460ff60a01b191690553480156200001e57600080fd5b5060405162002bda38038062002bda833981016040819052620000419162000127565b6200004c33620000d7565b6001600160a01b038116620000b15760405162461bcd60e51b815260206004820152602160248201527f5374616b6520706f6f6c20616464726573732063616e6e6f74206265207a65726044820152606f60f81b606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b039290921691909117905562000159565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200013a57600080fd5b81516001600160a01b03811681146200015257600080fd5b9392505050565b612a7180620001696000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806381563ba511610104578063d434a108116100a2578063ee204abb11610071578063ee204abb14610439578063f2fde38b1461044c578063f8ea47561461045f578063fd5832f11461047257600080fd5b8063d434a108146103ed578063d47875d014610400578063d8f193f414610413578063e42803671461042657600080fd5b8063bb192de1116100de578063bb192de1146103a1578063c7c5a763146103b4578063ce16bc4c146103c7578063d0b3a43c146103da57600080fd5b806381563ba5146103545780638da5cb5b146103695780639a5955431461038e57600080fd5b80633ed27f5c11610171578063567142be1161014b578063567142be146102d8578063584ce52e14610300578063715018a614610313578063784dad671461031b57600080fd5b80633ed27f5c1461029d5780634ad8c1e5146102b05780634bb278f3146102d057600080fd5b806315a12db0116101ad57806315a12db014610224578063200d2ed21461024457806323707714146102655780633e7981af1461027857600080fd5b806301ffc9a7146101d457806303040e8f146101fc57806305f8246c14610211575b600080fd5b6101e76101e2366004612151565b610485565b60405190151581526020015b60405180910390f35b61020f61020a366004612266565b61051e565b005b61020f61021f36600461239f565b610653565b610237610232366004612409565b6106d1565b6040516101f3919061243e565b60015461025890600160a01b900460ff1681565b6040516101f391906124a1565b61020f6102733660046124c9565b61074f565b61028b61028636600461252d565b610870565b60405160ff90911681526020016101f3565b61020f6102ab366004612546565b61088a565b6102c36102be3660046125a0565b6109ab565b6040516101f391906125bb565b61020f610b67565b6001546102ed90600160a81b900461ffff1681565b60405161ffff90911681526020016101f3565b61020f61030e36600461261d565b610c38565b61020f610cb1565b610346610329366004612678565b600560209081526000928352604080842090915290825290205481565b6040519081526020016101f3565b61035c610cc5565b6040516101f391906126a4565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101f3565b61020f61039c3660046126dc565b610d1d565b6102376103af36600461252d565b610e47565b61020f6103c23660046127a3565b610e5d565b6102c36103d5366004612409565b61107e565b6103466103e8366004612821565b611090565b6103466103fb366004612678565b6110c4565b61034661040e3660046125a0565b6110ec565b6102c361042136600461252d565b611212565b61028b610434366004612409565b61121d565b6103466104473660046125a0565b611242565b61020f61045a3660046125a0565b611300565b600154610376906001600160a01b031681565b61020f610480366004612866565b611390565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd47875d000000000000000000000000000000000000000000000000000000000148061051857507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b600060018054600160a01b900460ff169081111561053e5761053e61248b565b146105895760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b60448201526064015b60405180910390fd5b610591611598565b600154604051630c2effa360e31b81526001600160a01b03808616600483015285921690636177fd1890602401602060405180830381865afa1580156105db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ff9190612932565b6106425760405162461bcd60e51b815260206004820152601460248201527315d85b1b195d081a5cc81b9bdd081cdd185ad95960621b6044820152606401610580565b61064d8484846115f2565b50505050565b600060018054600160a01b900460ff16908111156106735761067361248b565b146106b95760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610580565b6106c1611598565b6106cc83838361183d565b505050565b60606106ef8280519060200120600090815260046020526040902090565b80548060200260200160405190810160405280929190818152602001828054801561074357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610725575b50505050509050919050565b600060018054600160a01b900460ff169081111561076f5761076f61248b565b146107b55760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610580565b600154604051630c2effa360e31b81523360048201819052916001600160a01b031690636177fd1890602401602060405180830381865afa1580156107fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108229190612932565b6108655760405162461bcd60e51b815260206004820152601460248201527315d85b1b195d081a5cc81b9bdd081cdd185ad95960621b6044820152606401610580565b6106cc338484611a58565b60008181526002602052604081206001015460ff16610518565b600060018054600160a01b900460ff16908111156108aa576108aa61248b565b146108f05760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610580565b600154604051630c2effa360e31b81523360048201819052916001600160a01b031690636177fd1890602401602060405180830381865afa158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d9190612932565b6109a05760405162461bcd60e51b815260206004820152601460248201527315d85b1b195d081a5cc81b9bdd081cdd185ad95960621b6044820152606401610580565b6106cc3384846115f2565b60606000805b600354811015610a275760056000600383815481106109d2576109d2612954565b6000918252602080832090910154835282810193909352604091820181206001600160a01b038816825290925290205415610a155781610a1181612980565b9250505b80610a1f8161299f565b9150506109b1565b5060008160ff1667ffffffffffffffff811115610a4657610a466121af565b604051908082528060200260200182016040528015610a9157816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610a645790505b5090506000805b600354811015610b5d57600060038281548110610ab757610ab7612954565b60009182526020808320909101548083526005825260408084206001600160a01b038c1685529092529082205490925090819003610af6575050610b4b565b6040518060600160405280896001600160a01b0316815260200183815260200182815250858560ff1681518110610b2f57610b2f612954565b60200260200101819052508380610b4590612980565b94505050505b80610b558161299f565b915050610a98565b5090949350505050565b610b6f611598565b600060018054600160a01b900460ff1690811115610b8f57610b8f61248b565b14610bd55760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610580565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1790556040805142815290517f839cf22e1ba87ce2f5b9bbf46cf0175a09eed52febdfaac8852478e68203c7639181900360200190a1565b600060018054600160a01b900460ff1690811115610c5857610c5861248b565b14610c9e5760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610580565b610ca6611598565b6106cc838383611b63565b610cb9611598565b610cc36000611ec5565b565b60606003805480602002602001604051908101604052809291908181526020018280548015610d1357602002820191906000526020600020905b815481526020019060010190808311610cff575b5050505050905090565b600060018054600160a01b900460ff1690811115610d3d57610d3d61248b565b14610d835760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610580565b610d8b611598565b600154604051630c2effa360e31b81526001600160a01b03808616600483015285921690636177fd1890602401602060405180830381865afa158015610dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df99190612932565b610e3c5760405162461bcd60e51b815260206004820152601460248201527315d85b1b195d081a5cc81b9bdd081cdd185ad95960621b6044820152606401610580565b61064d848484611a58565b60008181526004602052604090206060906106ef565b600060018054600160a01b900460ff1690811115610e7d57610e7d61248b565b14610ec35760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610580565b610ecb611598565b6000835111610f1c5760405162461bcd60e51b815260206004820152601960248201527f5175657374696f6e732063616e6e6f7420626520656d707479000000000000006044820152606401610580565b8151835114610f935760405162461bcd60e51b815260206004820152602860248201527f5175657374696f6e7320616e6420616e737765724b657973206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610580565b805183511461100a5760405162461bcd60e51b815260206004820152602a60248201527f5175657374696f6e7320616e6420616c7465726e617469766573206c656e677460448201527f68206d69736d61746368000000000000000000000000000000000000000000006064820152608401610580565b60005b835181101561064d5761106c84828151811061102b5761102b612954565b602002602001015184838151811061104557611045612954565b602002602001015184848151811061105f5761105f612954565b6020026020010151611b63565b806110768161299f565b91505061100d565b60606105188280519060200120611f22565b815160208084019190912060009081526005825260408082206001600160a01b0385168352909252908120545b9392505050565b60008281526005602090815260408083206001600160a01b03851684529091528120546110bd565b600154604051630c2effa360e31b81526001600160a01b0380841660048301526000928492911690636177fd1890602401602060405180830381865afa15801561113a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115e9190612932565b6111a15760405162461bcd60e51b815260206004820152601460248201527315d85b1b195d081a5cc81b9bdd081cdd185ad95960621b6044820152606401610580565b60006111ac84612059565b6111b79060646129b8565b6001549091506111d290600160a81b900461ffff16826129e5565b156111de5760016111e1565b60005b60015460ff919091169061120090600160a81b900461ffff16836129f9565b61120a9190612a0d565b949350505050565b606061051882611f22565b6000610518828051906020012060009081526002602052604090206001015460ff1690565b600154604051630c2effa360e31b81526001600160a01b0380841660048301526000928492911690636177fd1890602401602060405180830381865afa158015611290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b49190612932565b6112f75760405162461bcd60e51b815260206004820152601460248201527315d85b1b195d081a5cc81b9bdd081cdd185ad95960621b6044820152606401610580565b6110bd83612059565b611308611598565b6001600160a01b0381166113845760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610580565b61138d81611ec5565b50565b600060018054600160a01b900460ff16908111156113b0576113b061248b565b146113f65760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610580565b6113fe611598565b600083511161144f5760405162461bcd60e51b815260206004820152601960248201527f5175657374696f6e732063616e6e6f7420626520656d707479000000000000006044820152606401610580565b81518351146114c55760405162461bcd60e51b8152602060048201526024808201527f5175657374696f6e7320616e6420706f696e7473206c656e677468206d69736d60448201527f61746368000000000000000000000000000000000000000000000000000000006064820152608401610580565b80518351146115245760405162461bcd60e51b815260206004820152602560248201527f5175657374696f6e7320616e64206f7074696f6e73206c656e677468206d69736044820152640dac2e8c6d60db1b6064820152608401610580565b60005b835181101561064d5761158684828151811061154557611545612954565b602002602001015184838151811061155f5761155f612954565b602002602001015184848151811061157957611579612954565b602002602001015161183d565b806115908161299f565b915050611527565b6000546001600160a01b03163314610cc35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610580565b8151602083012061161181600090815260026020526040902054151590565b61165d5760405162461bcd60e51b815260206004820152601760248201527f5175657374696f6e206e6f7420726567697374657265640000000000000000006044820152606401610580565b60008251116116ae5760405162461bcd60e51b815260206004820152601660248201527f416e737765722063616e6e6f7420626520656d707479000000000000000000006044820152606401610580565b815160208084019190912060008381526002909252604090912060010154610100900460ff1615806116fc5750600082815260026020908152604080832084845260030190915290205460ff165b61176e5760405162461bcd60e51b815260206004820152602160248201527f416e73776572206d757374206265206f6e65206f6620746865206f7074696f6e60448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610580565b60008281526005602090815260408083206001600160a01b038916845290915281205490036117dc57600082815260046020908152604082208054600181018255908352912001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387161790555b60008281526005602090815260408083206001600160a01b03891680855290835292819020849055514281528492917fa2aea2705a34468171e6f83841a840f8ed3df5c96dbac124d1fd733778accc06910160405180910390a35050505050565b825183906024146118905760405162461bcd60e51b815260206004820152601f60248201527f55554944206d7573742062652033362063686172616374657273206c6f6e67006044820152606401610580565b805160208201206118af81600090815260026020526040902054151590565b156118fc5760405162461bcd60e51b815260206004820152601b60248201527f5175657374696f6e20616c7265616479207265676973746572656400000000006044820152606401610580565b6000818152600260205260408120828155600181018054865115156101000261ffff1990911660ff891617179055905b845181101561199657600182600301600087848151811061194f5761194f612954565b602002602001015180519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550808061198e9061299f565b91505061192c565b5060038054600180820183556000929092527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01839055805460ff871691906015906119ee908490600160a81b900461ffff16612a20565b92506101000a81548161ffff021916908361ffff160217905550817f3650dd2641eeabbd5d0352252611264f3fb6126e40f3cd8b58bfd3cdc09e72a98642604051611a4892919060ff929092168252602082015260400190565b60405180910390a2505050505050565b6000825111611aa95760405162461bcd60e51b815260206004820152601760248201527f416e73776572732063616e6e6f7420626520656d7074790000000000000000006044820152606401610580565b8051825114611b085760405162461bcd60e51b815260206004820152602560248201527f5175657374696f6e7320616e6420616e7377657273206c656e677468206d69736044820152640dac2e8c6d60db1b6064820152608401610580565b60005b825181101561064d57611b5184848381518110611b2a57611b2a612954565b6020026020010151848481518110611b4457611b44612954565b60200260200101516115f2565b80611b5b8161299f565b915050611b0b565b82516020840120611b8281600090815260026020526040902054151590565b611bce5760405162461bcd60e51b815260206004820152601760248201527f5175657374696f6e206e6f7420726567697374657265640000000000000000006044820152606401610580565b6000835111611c1f5760405162461bcd60e51b815260206004820152601a60248201527f416e73776572206b657920636f6e6e6f7420626520656d7074790000000000006044820152606401610580565b825160208085019190912060008381526002909252604090912060010154610100900460ff161580611c6d5750600082815260026020908152604080832084845260030190915290205460ff165b611cdf5760405162461bcd60e51b815260206004820152602560248201527f416e73776572206b6579206d757374206265206f6e65206f6620746865206f7060448201527f74696f6e730000000000000000000000000000000000000000000000000000006064820152608401610580565b60008281526002602081905260408220018290555b8351811015611e83576000848281518110611d1157611d11612954565b60200260200101515111611d675760405162461bcd60e51b815260206004820152601f60248201527f416c7465726e6172697665206b657920636f6e6e6f7420626520656d707479006044820152606401610580565b6000848281518110611d7b57611d7b612954565b60200260200101518051906020012090506002600085815260200190815260200160002060010160019054906101000a900460ff161580611dd85750600084815260026020908152604080832084845260030190915290205460ff165b611e4a5760405162461bcd60e51b815260206004820152602660248201527f416c7465726e6174697665206d757374206265206f6e65206f6620746865206f60448201527f7074696f6e7300000000000000000000000000000000000000000000000000006064820152608401610580565b60008481526002602090815260408083209383526004909301905220805460ff1916600117905580611e7b8161299f565b915050611cf4565b50817f080dac086f99f9d5439fb8aeeb4a62b83a54b17ff07aa223076e24c7be1987c042604051611eb691815260200190565b60405180910390a25050505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818152600460205260408120546060919067ffffffffffffffff811115611f4d57611f4d6121af565b604051908082528060200260200182016040528015611f9857816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181611f6b5790505b50905060005b600084815260046020526040902054811015612052576000848152600460205260408120805483908110611fd457611fd4612954565b60009182526020808320909101548783526005825260408084206001600160a01b0390921680855291835292839020548351606081018552828152928301899052928201839052855190935085908590811061203257612032612954565b60200260200101819052505050808061204a9061299f565b915050611f9e565b5092915050565b600080805b6003548110156120525760006003828154811061207d5761207d612954565b9060005260206000200154905061209485826120ce565b156120bb576000818152600260205260409020600101546120b89060ff1684612a0d565b92505b50806120c68161299f565b91505061205e565b60008181526005602090815260408083206001600160a01b0386168452909152812054808203612102576000915050610518565b6000838152600260208190526040909120015480158061212157508082145b806121485750600084815260026020908152604080832085845260040190915290205460ff165b95945050505050565b60006020828403121561216357600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146110bd57600080fd5b80356001600160a01b03811681146121aa57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156121ee576121ee6121af565b604052919050565b600082601f83011261220757600080fd5b813567ffffffffffffffff811115612221576122216121af565b612234601f8201601f19166020016121c5565b81815284602083860101111561224957600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561227b57600080fd5b61228484612193565b9250602084013567ffffffffffffffff808211156122a157600080fd5b6122ad878388016121f6565b935060408601359150808211156122c357600080fd5b506122d0868287016121f6565b9150509250925092565b803560ff811681146121aa57600080fd5b600067ffffffffffffffff821115612305576123056121af565b5060051b60200190565b600082601f83011261232057600080fd5b81356020612335612330836122eb565b6121c5565b82815260059290921b8401810191818101908684111561235457600080fd5b8286015b8481101561239457803567ffffffffffffffff8111156123785760008081fd5b6123868986838b01016121f6565b845250918301918301612358565b509695505050505050565b6000806000606084860312156123b457600080fd5b833567ffffffffffffffff808211156123cc57600080fd5b6123d8878388016121f6565b94506123e6602087016122da565b935060408601359150808211156123fc57600080fd5b506122d08682870161230f565b60006020828403121561241b57600080fd5b813567ffffffffffffffff81111561243257600080fd5b61120a848285016121f6565b6020808252825182820181905260009190848201906040850190845b8181101561247f5783516001600160a01b03168352928401929184019160010161245a565b50909695505050505050565b634e487b7160e01b600052602160045260246000fd5b60208101600283106124c357634e487b7160e01b600052602160045260246000fd5b91905290565b600080604083850312156124dc57600080fd5b823567ffffffffffffffff808211156124f457600080fd5b6125008683870161230f565b9350602085013591508082111561251657600080fd5b506125238582860161230f565b9150509250929050565b60006020828403121561253f57600080fd5b5035919050565b6000806040838503121561255957600080fd5b823567ffffffffffffffff8082111561257157600080fd5b61257d868387016121f6565b9350602085013591508082111561259357600080fd5b50612523858286016121f6565b6000602082840312156125b257600080fd5b6110bd82612193565b602080825282518282018190526000919060409081850190868401855b8281101561261057815180516001600160a01b03168552868101518786015285015185850152606090930192908501906001016125d8565b5091979650505050505050565b60008060006060848603121561263257600080fd5b833567ffffffffffffffff8082111561264a57600080fd5b612656878388016121f6565b9450602086013591508082111561266c57600080fd5b6123e6878388016121f6565b6000806040838503121561268b57600080fd5b8235915061269b60208401612193565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561247f578351835292840192918401916001016126c0565b6000806000606084860312156126f157600080fd5b6126fa84612193565b9250602084013567ffffffffffffffff8082111561271757600080fd5b6123e68783880161230f565b600082601f83011261273457600080fd5b81356020612744612330836122eb565b82815260059290921b8401810191818101908684111561276357600080fd5b8286015b8481101561239457803567ffffffffffffffff8111156127875760008081fd5b6127958986838b010161230f565b845250918301918301612767565b6000806000606084860312156127b857600080fd5b833567ffffffffffffffff808211156127d057600080fd5b6127dc8783880161230f565b945060208601359150808211156127f257600080fd5b6127fe8783880161230f565b9350604086013591508082111561281457600080fd5b506122d086828701612723565b6000806040838503121561283457600080fd5b823567ffffffffffffffff81111561284b57600080fd5b612857858286016121f6565b92505061269b60208401612193565b60008060006060848603121561287b57600080fd5b833567ffffffffffffffff8082111561289357600080fd5b61289f8783880161230f565b94506020915081860135818111156128b657600080fd5b8601601f810188136128c757600080fd5b80356128d5612330826122eb565b81815260059190911b8201840190848101908a8311156128f457600080fd5b928501925b828410156129195761290a846122da565b825292850192908501906128f9565b9650505050604086013591508082111561281457600080fd5b60006020828403121561294457600080fd5b815180151581146110bd57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff81036129965761299661296a565b60010192915050565b6000600182016129b1576129b161296a565b5060010190565b80820281158282048414176105185761051861296a565b634e487b7160e01b600052601260045260246000fd5b6000826129f4576129f46129cf565b500690565b600082612a0857612a086129cf565b500490565b808201808211156105185761051861296a565b61ffff8181168382160190808211156120525761205261296a56fea2646970667358221220406ae383fac9108619381fe23f2c9db1472f875156c2fa755378938f77c9e34a64736f6c63430008150033";

type KannaAuditAnswersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KannaAuditAnswersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KannaAuditAnswers__factory extends ContractFactory {
  constructor(...args: KannaAuditAnswersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    stakePoolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KannaAuditAnswers> {
    return super.deploy(
      stakePoolAddress,
      overrides || {}
    ) as Promise<KannaAuditAnswers>;
  }
  override getDeployTransaction(
    stakePoolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(stakePoolAddress, overrides || {});
  }
  override attach(address: string): KannaAuditAnswers {
    return super.attach(address) as KannaAuditAnswers;
  }
  override connect(signer: Signer): KannaAuditAnswers__factory {
    return super.connect(signer) as KannaAuditAnswers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KannaAuditAnswersInterface {
    return new utils.Interface(_abi) as KannaAuditAnswersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KannaAuditAnswers {
    return new Contract(address, _abi, signerOrProvider) as KannaAuditAnswers;
  }
}
