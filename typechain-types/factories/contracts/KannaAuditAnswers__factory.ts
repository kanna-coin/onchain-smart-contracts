/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  KannaAuditAnswers,
  KannaAuditAnswersInterface,
} from "../../contracts/KannaAuditAnswers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stakePoolAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AnswerKeySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AnswerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Finalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "points",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "QuestionRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
    ],
    name: "getQuestionAnswers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "answer",
            type: "bytes32",
          },
        ],
        internalType: "struct KannaAuditAnswers.Answer[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
    ],
    name: "getQuestionAnswers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "answer",
            type: "bytes32",
          },
        ],
        internalType: "struct KannaAuditAnswers.Answer[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getQuestionIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
    ],
    name: "getQuestionPoints",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
    ],
    name: "getQuestionPoints",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
    ],
    name: "getQuestionWallets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
    ],
    name: "getQuestionWallets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getWalletAnswer",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getWalletAnswer",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getWalletAnswers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "answer",
            type: "bytes32",
          },
        ],
        internalType: "struct KannaAuditAnswers.Answer[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "questionAnswers",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "points",
        type: "uint8",
      },
      {
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
    ],
    name: "registerQuestion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "questionsUuid",
        type: "string[]",
      },
      {
        internalType: "uint8[]",
        name: "points",
        type: "uint8[]",
      },
      {
        internalType: "string[][]",
        name: "options",
        type: "string[][]",
      },
    ],
    name: "registerQuestions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
      {
        internalType: "string",
        name: "answer",
        type: "string",
      },
    ],
    name: "setAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
      {
        internalType: "string",
        name: "answerKey",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "alternatives",
        type: "string[]",
      },
    ],
    name: "setAnswerKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "questionsUuid",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "answers",
        type: "string[]",
      },
    ],
    name: "setAnswers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "string",
        name: "questionUuid",
        type: "string",
      },
      {
        internalType: "string",
        name: "answer",
        type: "string",
      },
    ],
    name: "setWalletAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "questionsUuid",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "answers",
        type: "string[]",
      },
    ],
    name: "setWalletAnswers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakePool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum KannaAuditAnswers.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPoints",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001805460ff60a01b191690553480156200001e57600080fd5b506040516200291f3803806200291f833981016040819052620000419162000127565b6200004c33620000d7565b6001600160a01b038116620000b15760405162461bcd60e51b815260206004820152602160248201527f5374616b6520706f6f6c20616464726573732063616e6e6f74206265207a65726044820152606f60f81b606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b039290921691909117905562000159565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200013a57600080fd5b81516001600160a01b03811681146200015257600080fd5b9392505050565b6127b680620001696000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806381563ba5116100f9578063d47875d011610097578063ee204abb11610071578063ee204abb1461041b578063f2fde38b1461042e578063f8ea475614610441578063fd5832f11461045457600080fd5b8063d47875d0146103e2578063d8f193f4146103f5578063e42803671461040857600080fd5b8063bb192de1116100d3578063bb192de114610396578063ce16bc4c146103a9578063d0b3a43c146103bc578063d434a108146103cf57600080fd5b806381563ba5146103495780638da5cb5b1461035e5780639a5955431461038357600080fd5b80633ed27f5c11610166578063567142be11610140578063567142be146102cd578063584ce52e146102f5578063715018a614610308578063784dad671461031057600080fd5b80633ed27f5c146102925780634ad8c1e5146102a55780634bb278f3146102c557600080fd5b806315a12db0116101a257806315a12db014610219578063200d2ed214610239578063237077141461025a5780633e7981af1461026d57600080fd5b806301ffc9a7146101c957806303040e8f146101f157806305f8246c14610206575b600080fd5b6101dc6101d7366004611f07565b610467565b60405190151581526020015b60405180910390f35b6102046101ff36600461201c565b610500565b005b610204610214366004612155565b610635565b61022c6102273660046121bf565b6106b3565b6040516101e891906121f4565b60015461024d90600160a01b900460ff1681565b6040516101e89190612257565b61020461026836600461227f565b610731565b61028061027b3660046122e3565b610852565b60405160ff90911681526020016101e8565b6102046102a03660046122fc565b61086c565b6102b86102b3366004612356565b61098d565b6040516101e89190612371565b610204610b49565b6001546102e290600160a81b900461ffff1681565b60405161ffff90911681526020016101e8565b6102046103033660046123d3565b610c1a565b610204610fea565b61033b61031e36600461242e565b600560209081526000928352604080842090915290825290205481565b6040519081526020016101e8565b610351610ffe565b6040516101e8919061245a565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101e8565b610204610391366004612492565b611056565b61022c6103a43660046122e3565b611180565b6102b86103b73660046121bf565b611196565b61033b6103ca3660046124d9565b6111a8565b61033b6103dd36600461242e565b6111dc565b61033b6103f0366004612356565b611204565b6102b86104033660046122e3565b61132a565b6102806104163660046121bf565b611335565b61033b610429366004612356565b61135a565b61020461043c366004612356565b611418565b60015461036b906001600160a01b031681565b61020461046236600461259e565b6114a8565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd47875d00000000000000000000000000000000000000000000000000000000014806104fa57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b600060018054600160a01b900460ff169081111561052057610520612241565b1461056b5760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b60448201526064015b60405180910390fd5b6105736116b0565b600154604051630c2effa360e31b81526001600160a01b03808616600483015285921690636177fd1890602401602060405180830381865afa1580156105bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190612677565b6106245760405162461bcd60e51b815260206004820152601460248201527315d85b1b195d081a5cc81b9bdd081cdd185ad95960621b6044820152606401610562565b61062f84848461170a565b50505050565b600060018054600160a01b900460ff169081111561065557610655612241565b1461069b5760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610562565b6106a36116b0565b6106ae838383611955565b505050565b60606106d18280519060200120600090815260046020526040902090565b80548060200260200160405190810160405280929190818152602001828054801561072557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610707575b50505050509050919050565b600060018054600160a01b900460ff169081111561075157610751612241565b146107975760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610562565b600154604051630c2effa360e31b81523360048201819052916001600160a01b031690636177fd1890602401602060405180830381865afa1580156107e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108049190612677565b6108475760405162461bcd60e51b815260206004820152601460248201527315d85b1b195d081a5cc81b9bdd081cdd185ad95960621b6044820152606401610562565b6106ae338484611b70565b60008181526002602052604081206001015460ff166104fa565b600060018054600160a01b900460ff169081111561088c5761088c612241565b146108d25760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610562565b600154604051630c2effa360e31b81523360048201819052916001600160a01b031690636177fd1890602401602060405180830381865afa15801561091b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093f9190612677565b6109825760405162461bcd60e51b815260206004820152601460248201527315d85b1b195d081a5cc81b9bdd081cdd185ad95960621b6044820152606401610562565b6106ae33848461170a565b60606000805b600354811015610a095760056000600383815481106109b4576109b4612699565b6000918252602080832090910154835282810193909352604091820181206001600160a01b0388168252909252902054156109f757816109f3816126c5565b9250505b80610a01816126e4565b915050610993565b5060008160ff1667ffffffffffffffff811115610a2857610a28611f65565b604051908082528060200260200182016040528015610a7357816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610a465790505b5090506000805b600354811015610b3f57600060038281548110610a9957610a99612699565b60009182526020808320909101548083526005825260408084206001600160a01b038c1685529092529082205490925090819003610ad8575050610b2d565b6040518060600160405280896001600160a01b0316815260200183815260200182815250858560ff1681518110610b1157610b11612699565b60200260200101819052508380610b27906126c5565b94505050505b80610b37816126e4565b915050610a7a565b5090949350505050565b610b516116b0565b600060018054600160a01b900460ff1690811115610b7157610b71612241565b14610bb75760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610562565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1790556040805142815290517f839cf22e1ba87ce2f5b9bbf46cf0175a09eed52febdfaac8852478e68203c7639181900360200190a1565b600060018054600160a01b900460ff1690811115610c3a57610c3a612241565b14610c805760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610562565b610c886116b0565b82516020840120610ca781600090815260026020526040902054151590565b610cf35760405162461bcd60e51b815260206004820152601760248201527f5175657374696f6e206e6f7420726567697374657265640000000000000000006044820152606401610562565b6000835111610d445760405162461bcd60e51b815260206004820152601a60248201527f416e73776572206b657920636f6e6e6f7420626520656d7074790000000000006044820152606401610562565b825160208085019190912060008381526002909252604090912060010154610100900460ff161580610d925750600082815260026020908152604080832084845260030190915290205460ff165b610e045760405162461bcd60e51b815260206004820152602560248201527f416e73776572206b6579206d757374206265206f6e65206f6620746865206f7060448201527f74696f6e730000000000000000000000000000000000000000000000000000006064820152608401610562565b60008281526002602081905260408220018290555b8351811015610fa8576000848281518110610e3657610e36612699565b60200260200101515111610e8c5760405162461bcd60e51b815260206004820152601f60248201527f416c7465726e6172697665206b657920636f6e6e6f7420626520656d707479006044820152606401610562565b6000848281518110610ea057610ea0612699565b60200260200101518051906020012090506002600085815260200190815260200160002060010160019054906101000a900460ff161580610efd5750600084815260026020908152604080832084845260030190915290205460ff165b610f6f5760405162461bcd60e51b815260206004820152602660248201527f416c7465726e6174697665206d757374206265206f6e65206f6620746865206f60448201527f7074696f6e7300000000000000000000000000000000000000000000000000006064820152608401610562565b60008481526002602090815260408083209383526004909301905220805460ff1916600117905580610fa0816126e4565b915050610e19565b50817f080dac086f99f9d5439fb8aeeb4a62b83a54b17ff07aa223076e24c7be1987c042604051610fdb91815260200190565b60405180910390a25050505050565b610ff26116b0565b610ffc6000611c7b565b565b6060600380548060200260200160405190810160405280929190818152602001828054801561104c57602002820191906000526020600020905b815481526020019060010190808311611038575b5050505050905090565b600060018054600160a01b900460ff169081111561107657611076612241565b146110bc5760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610562565b6110c46116b0565b600154604051630c2effa360e31b81526001600160a01b03808616600483015285921690636177fd1890602401602060405180830381865afa15801561110e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111329190612677565b6111755760405162461bcd60e51b815260206004820152601460248201527315d85b1b195d081a5cc81b9bdd081cdd185ad95960621b6044820152606401610562565b61062f848484611b70565b60008181526004602052604090206060906106d1565b60606104fa8280519060200120611cd8565b815160208084019190912060009081526005825260408082206001600160a01b0385168352909252908120545b9392505050565b60008281526005602090815260408083206001600160a01b03851684529091528120546111d5565b600154604051630c2effa360e31b81526001600160a01b0380841660048301526000928492911690636177fd1890602401602060405180830381865afa158015611252573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112769190612677565b6112b95760405162461bcd60e51b815260206004820152601460248201527315d85b1b195d081a5cc81b9bdd081cdd185ad95960621b6044820152606401610562565b60006112c484611e0f565b6112cf9060646126fd565b6001549091506112ea90600160a81b900461ffff168261272a565b156112f65760016112f9565b60005b60015460ff919091169061131890600160a81b900461ffff168361273e565b6113229190612752565b949350505050565b60606104fa82611cd8565b60006104fa828051906020012060009081526002602052604090206001015460ff1690565b600154604051630c2effa360e31b81526001600160a01b0380841660048301526000928492911690636177fd1890602401602060405180830381865afa1580156113a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cc9190612677565b61140f5760405162461bcd60e51b815260206004820152601460248201527315d85b1b195d081a5cc81b9bdd081cdd185ad95960621b6044820152606401610562565b6111d583611e0f565b6114206116b0565b6001600160a01b03811661149c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610562565b6114a581611c7b565b50565b600060018054600160a01b900460ff16908111156114c8576114c8612241565b1461150e5760405162461bcd60e51b8152602060048201526016602482015275436f6e7472616374206973206e6f742061637469766560501b6044820152606401610562565b6115166116b0565b60008351116115675760405162461bcd60e51b815260206004820152601960248201527f5175657374696f6e732063616e6e6f7420626520656d707479000000000000006044820152606401610562565b81518351146115dd5760405162461bcd60e51b8152602060048201526024808201527f5175657374696f6e7320616e6420706f696e7473206c656e677468206d69736d60448201527f61746368000000000000000000000000000000000000000000000000000000006064820152608401610562565b805183511461163c5760405162461bcd60e51b815260206004820152602560248201527f5175657374696f6e7320616e64206f7074696f6e73206c656e677468206d69736044820152640dac2e8c6d60db1b6064820152608401610562565b60005b835181101561062f5761169e84828151811061165d5761165d612699565b602002602001015184838151811061167757611677612699565b602002602001015184848151811061169157611691612699565b6020026020010151611955565b806116a8816126e4565b91505061163f565b6000546001600160a01b03163314610ffc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610562565b8151602083012061172981600090815260026020526040902054151590565b6117755760405162461bcd60e51b815260206004820152601760248201527f5175657374696f6e206e6f7420726567697374657265640000000000000000006044820152606401610562565b60008251116117c65760405162461bcd60e51b815260206004820152601660248201527f416e737765722063616e6e6f7420626520656d707479000000000000000000006044820152606401610562565b815160208084019190912060008381526002909252604090912060010154610100900460ff1615806118145750600082815260026020908152604080832084845260030190915290205460ff165b6118865760405162461bcd60e51b815260206004820152602160248201527f416e73776572206d757374206265206f6e65206f6620746865206f7074696f6e60448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610562565b60008281526005602090815260408083206001600160a01b038916845290915281205490036118f457600082815260046020908152604082208054600181018255908352912001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387161790555b60008281526005602090815260408083206001600160a01b03891680855290835292819020849055514281528492917fa2aea2705a34468171e6f83841a840f8ed3df5c96dbac124d1fd733778accc06910160405180910390a35050505050565b825183906024146119a85760405162461bcd60e51b815260206004820152601f60248201527f55554944206d7573742062652033362063686172616374657273206c6f6e67006044820152606401610562565b805160208201206119c781600090815260026020526040902054151590565b15611a145760405162461bcd60e51b815260206004820152601b60248201527f5175657374696f6e20616c7265616479207265676973746572656400000000006044820152606401610562565b6000818152600260205260408120828155600181018054865115156101000261ffff1990911660ff891617179055905b8451811015611aae576001826003016000878481518110611a6757611a67612699565b602002602001015180519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055508080611aa6906126e4565b915050611a44565b5060038054600180820183556000929092527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01839055805460ff87169190601590611b06908490600160a81b900461ffff16612765565b92506101000a81548161ffff021916908361ffff160217905550817f3650dd2641eeabbd5d0352252611264f3fb6126e40f3cd8b58bfd3cdc09e72a98642604051611b6092919060ff929092168252602082015260400190565b60405180910390a2505050505050565b6000825111611bc15760405162461bcd60e51b815260206004820152601760248201527f416e73776572732063616e6e6f7420626520656d7074790000000000000000006044820152606401610562565b8051825114611c205760405162461bcd60e51b815260206004820152602560248201527f5175657374696f6e7320616e6420616e7377657273206c656e677468206d69736044820152640dac2e8c6d60db1b6064820152608401610562565b60005b825181101561062f57611c6984848381518110611c4257611c42612699565b6020026020010151848481518110611c5c57611c5c612699565b602002602001015161170a565b80611c73816126e4565b915050611c23565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818152600460205260408120546060919067ffffffffffffffff811115611d0357611d03611f65565b604051908082528060200260200182016040528015611d4e57816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181611d215790505b50905060005b600084815260046020526040902054811015611e08576000848152600460205260408120805483908110611d8a57611d8a612699565b60009182526020808320909101548783526005825260408084206001600160a01b03909216808552918352928390205483516060810185528281529283018990529282018390528551909350859085908110611de857611de8612699565b602002602001018190525050508080611e00906126e4565b915050611d54565b5092915050565b600080805b600354811015611e0857600060038281548110611e3357611e33612699565b90600052602060002001549050611e4a8582611e84565b15611e7157600081815260026020526040902060010154611e6e9060ff1684612752565b92505b5080611e7c816126e4565b915050611e14565b60008181526005602090815260408083206001600160a01b0386168452909152812054808203611eb85760009150506104fa565b60008381526002602081905260409091200154801580611ed757508082145b80611efe5750600084815260026020908152604080832085845260040190915290205460ff165b95945050505050565b600060208284031215611f1957600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146111d557600080fd5b80356001600160a01b0381168114611f6057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611fa457611fa4611f65565b604052919050565b600082601f830112611fbd57600080fd5b813567ffffffffffffffff811115611fd757611fd7611f65565b611fea601f8201601f1916602001611f7b565b818152846020838601011115611fff57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561203157600080fd5b61203a84611f49565b9250602084013567ffffffffffffffff8082111561205757600080fd5b61206387838801611fac565b9350604086013591508082111561207957600080fd5b5061208686828701611fac565b9150509250925092565b803560ff81168114611f6057600080fd5b600067ffffffffffffffff8211156120bb576120bb611f65565b5060051b60200190565b600082601f8301126120d657600080fd5b813560206120eb6120e6836120a1565b611f7b565b82815260059290921b8401810191818101908684111561210a57600080fd5b8286015b8481101561214a57803567ffffffffffffffff81111561212e5760008081fd5b61213c8986838b0101611fac565b84525091830191830161210e565b509695505050505050565b60008060006060848603121561216a57600080fd5b833567ffffffffffffffff8082111561218257600080fd5b61218e87838801611fac565b945061219c60208701612090565b935060408601359150808211156121b257600080fd5b50612086868287016120c5565b6000602082840312156121d157600080fd5b813567ffffffffffffffff8111156121e857600080fd5b61132284828501611fac565b6020808252825182820181905260009190848201906040850190845b818110156122355783516001600160a01b031683529284019291840191600101612210565b50909695505050505050565b634e487b7160e01b600052602160045260246000fd5b602081016002831061227957634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561229257600080fd5b823567ffffffffffffffff808211156122aa57600080fd5b6122b6868387016120c5565b935060208501359150808211156122cc57600080fd5b506122d9858286016120c5565b9150509250929050565b6000602082840312156122f557600080fd5b5035919050565b6000806040838503121561230f57600080fd5b823567ffffffffffffffff8082111561232757600080fd5b61233386838701611fac565b9350602085013591508082111561234957600080fd5b506122d985828601611fac565b60006020828403121561236857600080fd5b6111d582611f49565b602080825282518282018190526000919060409081850190868401855b828110156123c657815180516001600160a01b031685528681015187860152850151858501526060909301929085019060010161238e565b5091979650505050505050565b6000806000606084860312156123e857600080fd5b833567ffffffffffffffff8082111561240057600080fd5b61240c87838801611fac565b9450602086013591508082111561242257600080fd5b61219c87838801611fac565b6000806040838503121561244157600080fd5b8235915061245160208401611f49565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561223557835183529284019291840191600101612476565b6000806000606084860312156124a757600080fd5b6124b084611f49565b9250602084013567ffffffffffffffff808211156124cd57600080fd5b61219c878388016120c5565b600080604083850312156124ec57600080fd5b823567ffffffffffffffff81111561250357600080fd5b61250f85828601611fac565b92505061245160208401611f49565b600082601f83011261252f57600080fd5b8135602061253f6120e6836120a1565b82815260059290921b8401810191818101908684111561255e57600080fd5b8286015b8481101561214a57803567ffffffffffffffff8111156125825760008081fd5b6125908986838b01016120c5565b845250918301918301612562565b6000806000606084860312156125b357600080fd5b833567ffffffffffffffff808211156125cb57600080fd5b6125d7878388016120c5565b94506020915081860135818111156125ee57600080fd5b8601601f810188136125ff57600080fd5b803561260d6120e6826120a1565b81815260059190911b8201840190848101908a83111561262c57600080fd5b928501925b828410156126515761264284612090565b82529285019290850190612631565b9650505050604086013591508082111561266a57600080fd5b506120868682870161251e565b60006020828403121561268957600080fd5b815180151581146111d557600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff81036126db576126db6126af565b60010192915050565b6000600182016126f6576126f66126af565b5060010190565b80820281158282048414176104fa576104fa6126af565b634e487b7160e01b600052601260045260246000fd5b60008261273957612739612714565b500690565b60008261274d5761274d612714565b500490565b808201808211156104fa576104fa6126af565b61ffff818116838216019080821115611e0857611e086126af56fea264697066735822122097fa79f28c03d676e90359e7ad85a351c481d190d96b4f469c583768ac3d06ff64736f6c63430008150033";

type KannaAuditAnswersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KannaAuditAnswersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KannaAuditAnswers__factory extends ContractFactory {
  constructor(...args: KannaAuditAnswersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    stakePoolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KannaAuditAnswers> {
    return super.deploy(
      stakePoolAddress,
      overrides || {}
    ) as Promise<KannaAuditAnswers>;
  }
  override getDeployTransaction(
    stakePoolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(stakePoolAddress, overrides || {});
  }
  override attach(address: string): KannaAuditAnswers {
    return super.attach(address) as KannaAuditAnswers;
  }
  override connect(signer: Signer): KannaAuditAnswers__factory {
    return super.connect(signer) as KannaAuditAnswers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KannaAuditAnswersInterface {
    return new utils.Interface(_abi) as KannaAuditAnswersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KannaAuditAnswers {
    return new Contract(address, _abi, signerOrProvider) as KannaAuditAnswers;
  }
}
