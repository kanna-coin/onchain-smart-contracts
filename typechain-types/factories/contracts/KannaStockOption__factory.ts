/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  KannaStockOption,
  KannaStockOptionInterface,
} from "../../contracts/KannaStockOption";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cliff",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lock",
        type: "uint256",
      },
      {
        internalType: "contract KannaToken",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contractDuration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cliffDuration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cliffDurationElapsed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingCliffDuration",
        type: "uint256",
      },
    ],
    name: "Canceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contractDuration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockDuration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDurationElapsed",
        type: "uint256",
      },
    ],
    name: "Completed",
    type: "event",
  },
  {
    inputs: [],
    name: "amount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountVested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "canceled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cliff",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "completed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "daysLeftToCancel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "daysLeftToWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "holder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract KannaToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200157e3803806200157e833981810160405281019062000037919062000223565b856000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836001819055508260028190555081600381905550600354600254620000df9190620002ee565b6004819055504260058190555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505062000329565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200016b826200013e565b9050919050565b6200017d816200015e565b81146200018957600080fd5b50565b6000815190506200019d8162000172565b92915050565b6000819050919050565b620001b881620001a3565b8114620001c457600080fd5b50565b600081519050620001d881620001ad565b92915050565b6000620001eb826200015e565b9050919050565b620001fd81620001de565b81146200020957600080fd5b50565b6000815190506200021d81620001f2565b92915050565b60008060008060008060c0878903121562000243576200024262000139565b5b60006200025389828a016200018c565b96505060206200026689828a016200018c565b95505060406200027989828a01620001c7565b94505060606200028c89828a01620001c7565b93505060806200029f89828a01620001c7565b92505060a0620002b289828a016200020c565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620002fb82620001a3565b91506200030883620001a3565b9250828201905080821115620003235762000322620002bf565b5b92915050565b61124580620003396000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063be9a655511610097578063e5503c2e11610066578063e5503c2e14610230578063ea8a1af01461024e578063f83d08ba14610258578063fc0c546a14610276576100f5565b8063be9a6555146101b8578063cf0913b0146101d6578063e1de7c80146101f4578063e534155d14610212576100f5565b80633f9942ff116100d35780633f9942ff146101405780638da5cb5b1461015e5780639d9a7fe91461017c578063aa8c217c1461019a576100f5565b80630fb5a6b4146100fa57806313d033c0146101185780633ccfd60b14610136575b600080fd5b610102610294565b60405161010f9190610b5f565b60405180910390f35b61012061029a565b60405161012d9190610b5f565b60405180910390f35b61013e6102a0565b005b6101486105d3565b6040516101559190610b95565b60405180910390f35b6101666105e6565b6040516101739190610bf1565b60405180910390f35b61018461060a565b6040516101919190610b95565b60405180910390f35b6101a261061d565b6040516101af9190610b5f565b60405180910390f35b6101c0610623565b6040516101cd9190610b5f565b60405180910390f35b6101de610629565b6040516101eb9190610b5f565b60405180910390f35b6101fc6106c9565b6040516102099190610b5f565b60405180910390f35b61021a610769565b6040516102279190610bf1565b60405180910390f35b61023861078f565b6040516102459190610b5f565b60405180910390f35b61025661082f565b005b610260610b1a565b60405161026d9190610b5f565b60405180910390f35b61027e610b20565b60405161028b9190610c6b565b60405180910390f35b60045481565b60025481565b600760159054906101000a900460ff16156102f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e790610ce3565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037790610d75565b60405180910390fd5b6002546005546103909190610dc4565b4210156103d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c990610e6a565b60405180910390fd5b6004546005546103e29190610dc4565b421015610424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041b90610efc565b60405180910390fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001546040518363ffffffff1660e01b81526004016104a5929190610f1c565b6020604051808303816000875af11580156104c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e89190610f76565b506001600760146101000a81548160ff021916908315150217905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f6fb61ab856c894012b4bb4cec231c0cdff4455a69580e377a892a5165e2ddd2d600154600454600354600454600554426105af9190610fa3565b6105b99190610dc4565b6040516105c99493929190610fd7565b60405180910390a3565b600760159054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff1681565b60015481565b60055481565b6000600760159054906101000a900460ff161561067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067290610ce3565b60405180910390fd5b60025460055461068b9190610dc4565b421061069a57600090506106c6565b62015180426002546005546106af9190610dc4565b6106b99190610fa3565b6106c3919061104b565b90505b90565b6000600760159054906101000a900460ff161561071b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071290610ce3565b60405180910390fd5b60045460055461072b9190610dc4565b421061073b576001549050610766565b6004546005544261074c9190610fa3565b600154610759919061107c565b610763919061104b565b90505b90565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760159054906101000a900460ff16156107e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d890610ce3565b60405180910390fd5b6004546005546107f19190610dc4565b4210610800576000905061082c565b62015180426004546005546108159190610dc4565b61081f9190610fa3565b610829919061104b565b90505b90565b600760159054906101000a900460ff161561087f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087690610ce3565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090490611130565b60405180910390fd5b60025460055461091d9190610dc4565b421061095e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109559061119c565b60405180910390fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001546040518363ffffffff1660e01b81526004016109dd929190610f1c565b6020604051808303816000875af11580156109fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a209190610f76565b506001600760156101000a81548160ff021916908315150217905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f9ce8b7d41f5d0e01f6434c1091a284a20c6fb61acaffd41a284ade1654d5e5e060015460045460025460055442610ae49190610fa3565b42600254600554610af59190610dc4565b610aff9190610fa3565b604051610b109594939291906111bc565b60405180910390a3565b60035481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b610b5981610b46565b82525050565b6000602082019050610b746000830184610b50565b92915050565b60008115159050919050565b610b8f81610b7a565b82525050565b6000602082019050610baa6000830184610b86565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bdb82610bb0565b9050919050565b610beb81610bd0565b82525050565b6000602082019050610c066000830184610be2565b92915050565b6000819050919050565b6000610c31610c2c610c2784610bb0565b610c0c565b610bb0565b9050919050565b6000610c4382610c16565b9050919050565b6000610c5582610c38565b9050919050565b610c6581610c4a565b82525050565b6000602082019050610c806000830184610c5c565b92915050565b600082825260208201905092915050565b7f436f6e74726163742063616e63656c6564000000000000000000000000000000600082015250565b6000610ccd601183610c86565b9150610cd882610c97565b602082019050919050565b60006020820190508181036000830152610cfc81610cc0565b9050919050565b7f4f6e6c7920686f6c6465722063616e2063616c6c20746869732066756e63746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b6000610d5f602283610c86565b9150610d6a82610d03565b604082019050919050565b60006020820190508181036000830152610d8e81610d52565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dcf82610b46565b9150610dda83610b46565b9250828201905080821115610df257610df1610d95565b5b92915050565b7f43616e6e6f74207769746864726177207768696c6520696e20636c696666207060008201527f6572696f64000000000000000000000000000000000000000000000000000000602082015250565b6000610e54602583610c86565b9150610e5f82610df8565b604082019050919050565b60006020820190508181036000830152610e8381610e47565b9050919050565b7f43616e6e6f74207769746864726177206265666f7265206c6f636b206475726160008201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b6000610ee6602483610c86565b9150610ef182610e8a565b604082019050919050565b60006020820190508181036000830152610f1581610ed9565b9050919050565b6000604082019050610f316000830185610be2565b610f3e6020830184610b50565b9392505050565b600080fd5b610f5381610b7a565b8114610f5e57600080fd5b50565b600081519050610f7081610f4a565b92915050565b600060208284031215610f8c57610f8b610f45565b5b6000610f9a84828501610f61565b91505092915050565b6000610fae82610b46565b9150610fb983610b46565b9250828203905081811115610fd157610fd0610d95565b5b92915050565b6000608082019050610fec6000830187610b50565b610ff96020830186610b50565b6110066040830185610b50565b6110136060830184610b50565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061105682610b46565b915061106183610b46565b9250826110715761107061101c565b5b828204905092915050565b600061108782610b46565b915061109283610b46565b92508282026110a081610b46565b915082820484148315176110b7576110b6610d95565b5b5092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061111a602183610c86565b9150611125826110be565b604082019050919050565b600060208201905081810360008301526111498161110d565b9050919050565b7f43616e6e6f742063616e63656c20616674657220636c69666600000000000000600082015250565b6000611186601983610c86565b915061119182611150565b602082019050919050565b600060208201905081810360008301526111b581611179565b9050919050565b600060a0820190506111d16000830188610b50565b6111de6020830187610b50565b6111eb6040830186610b50565b6111f86060830185610b50565b6112056080830184610b50565b969550505050505056fea2646970667358221220c3d7258ed2183faac988f47ea3f62fbbb40177005a95d1cf2837a798b062dfd664736f6c63430008110033";

type KannaStockOptionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KannaStockOptionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KannaStockOption__factory extends ContractFactory {
  constructor(...args: KannaStockOptionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _holder: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    _cliff: PromiseOrValue<BigNumberish>,
    _lock: PromiseOrValue<BigNumberish>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KannaStockOption> {
    return super.deploy(
      _owner,
      _holder,
      _amount,
      _cliff,
      _lock,
      _token,
      overrides || {}
    ) as Promise<KannaStockOption>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _holder: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    _cliff: PromiseOrValue<BigNumberish>,
    _lock: PromiseOrValue<BigNumberish>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _holder,
      _amount,
      _cliff,
      _lock,
      _token,
      overrides || {}
    );
  }
  override attach(address: string): KannaStockOption {
    return super.attach(address) as KannaStockOption;
  }
  override connect(signer: Signer): KannaStockOption__factory {
    return super.connect(signer) as KannaStockOption__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KannaStockOptionInterface {
    return new utils.Interface(_abi) as KannaStockOptionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KannaStockOption {
    return new Contract(address, _abi, signerOrProvider) as KannaStockOption;
  }
}
