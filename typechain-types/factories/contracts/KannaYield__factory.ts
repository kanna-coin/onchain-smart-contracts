/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  KannaYield,
  KannaYieldInterface,
} from "../../contracts/KannaYield";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_knnToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "returnAccount",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Collect",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalAmount",
        type: "uint256",
      },
    ],
    name: "Fee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "Reward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subscriptionAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalAmount",
        type: "uint256",
      },
    ],
    name: "Subscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_BASIS_POINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardsDuration",
        type: "uint256",
      },
    ],
    name: "addReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "holderRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "knnToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "knnYieldPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "knnYieldTotalFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPaymentEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolStartDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rawBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reducedFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "started",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionAmount",
        type: "uint256",
      },
    ],
    name: "subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040526201518060c090815262093a8060e05262278d0061010052624f1a00610120526276a700610140526200003d906008906005620001d9565b503480156200004a575f80fd5b50604051620017bd380380620017bd8339810160408190526200006d9162000255565b62000078336200018a565b6001600160a01b038216620000d45760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e2061646472657373000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0381166200012c5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642066656520726563697069656e7420616464726573730000006044820152606401620000cb565b6001600160a01b039182166080521660a0526008545f90815260116020526040808220610bb8905560095482528082206101f49055600a54825280822060fa9055600b54825280822060969055600c5482529020606490556200028b565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b826005810192821562000211579160200282015b8281111562000211578251829062ffffff16905591602001919060010190620001ed565b506200021f92915062000223565b5090565b5b808211156200021f575f815560010162000224565b80516001600160a01b038116811462000250575f80fd5b919050565b5f806040838503121562000267575f80fd5b620002728362000239565b9150620002826020840162000239565b90509250929050565b60805160a0516114df620002de5f395f818161027901528181610cbc0152610d6601525f81816102df015281816105700152818161066a01528181610b7701528181610ceb015261117101526114df5ff3fe608060405234801561000f575f80fd5b50600436106101d0575f3560e01c806375c93bb9116100fe578063c8f33c911161009e578063e9fad8ee1161006e578063e9fad8ee146103e8578063ee1df50d146103f0578063ee2dd598146103f9578063f2fde38b14610401575f80fd5b8063c8f33c91146103bb578063cd3daf9d146103c4578063d82e3962146103cc578063df136d65146103df575f80fd5b80639f1b6c93116100d95780639f1b6c9314610398578063c24a0f8b146103a1578063c5fbf02d146103aa578063c8796572146103b3575f80fd5b806375c93bb91461036c5780637b0a47ee1461037f5780638da5cb5b14610388575f80fd5b80634a865b26116101745780636dda34db116101445780636dda34db1461032057806370a0823114610333578063715018a61461035b578063728ae4b714610363575f80fd5b80634a865b26146102b35780634acc79ed146102bb57806367cff967146102da5780636cf5a31f14610301575f80fd5b80630f574ba7116101af5780630f574ba71461022d57806312f9f52d146102425780632e1a7d4d146102615780634690484014610274575f80fd5b80628cc262146101d45780630aa0a175146102065780630cfcfd1e1461020e575b5f80fd5b6101f36101e2366004611373565b600e6020525f908152604090205481565b6040519081526020015b60405180910390f35b6101f3601481565b6101f361021c366004611373565b60106020525f908152604090205481565b61024061023b3660046113a0565b610414565b005b6101f3610250366004611373565b600f6020525f908152604090205481565b61024061026f3660046113a0565b6107ab565b61029b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101fd565b6101f361099a565b6101f36102c93660046113a0565b60116020525f908152604090205481565b61029b7f000000000000000000000000000000000000000000000000000000000000000081565b6101f361030f366004611373565b600d6020525f908152604090205481565b6101f361032e3660046113a0565b6109b2565b6101f3610341366004611373565b6001600160a01b03165f908152600f602052604090205490565b6102406109c8565b6101f360015481565b61024061037a3660046113b7565b6109db565b6101f360055481565b5f546001600160a01b031661029b565b6101f360025481565b6101f360045481565b6101f361271081565b6101f3610c94565b6101f360065481565b6101f3610dbb565b6101f36103da366004611373565b610e1a565b6101f360075481565b610240610e95565b6101f360035481565b6101f3600a81565b61024061040f366004611373565b610fed565b3361041d610dbb565b60075561042861099a565b6006556001600160a01b038116156104b457335f90815260106020526040902054600354811080156104675750335f908152600f602052604090205415155b1561047f57600354335f908152601060205260409020555b61048882610e1a565b6001600160a01b0383165f908152600e6020908152604080832093909355600754600d90915291902055505b426004541161050a5760405162461bcd60e51b815260206004820152601360248201527f4e6f2072657761726420617661696c61626c650000000000000000000000000060448201526064015b60405180910390fd5b5f82116105595760405162461bcd60e51b815260206004820152601660248201527f43616e6e6f74207375627363726962652030204b4e4e000000000000000000006044820152606401610501565b6040516370a0823160e01b815233600482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156105bd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105e191906113d7565b101561062f5760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152606401610501565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af11580156106b8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106dc91906113ee565b508160015f8282546106ee9190611421565b9091555050335f90815260106020526040902054801580610710575060035481105b806107285750335f908152600f602052604090205483115b1561073f57335f9081526010602052604090204290555b335f908152600f60205260408120805485929061075d908490611421565b9091555050604080518481526014602082015290810184905233907f30c692cd4cbc8cdb1c2478f9202c4f0fe0a2bb212b22d3952c722de5abb62b21906060015b60405180910390a2505050565b336107b4610dbb565b6007556107bf61099a565b6006556001600160a01b0381161561084b57335f90815260106020526040902054600354811080156107fe5750335f908152600f602052604090205415155b1561081657600354335f908152601060205260409020555b61081f82610e1a565b6001600160a01b0383165f908152600e6020908152604080832093909355600754600d90915291902055505b5f821161089a5760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420616d6f756e740000000000000000000000000000000000006044820152606401610501565b335f908152600f60205260409020548211156108f85760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152606401610501565b8160015f8282546109099190611434565b9091555050335f908152600f60205260408120805484929061092c908490611434565b9091555050335f818152600f602052604090205461094a919061107a565b50335f8181526010602052604090819020429055517f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649061098e9085815260200190565b60405180910390a25050565b5f60045442106109ab575060045490565b425b905090565b600881600581106109c1575f80fd5b0154905081565b6109d0611231565b6109d95f61128a565b565b6109e3611231565b5f6109ec610dbb565b6007556109f761099a565b6006556001600160a01b03811615610a8357335f9081526010602052604090205460035481108015610a365750335f908152600f602052604090205415155b15610a4e57600354335f908152601060205260409020555b610a5782610e1a565b6001600160a01b0383165f908152600e6020908152604080832093909355600754600d90915291902055505b600454610a908342611421565b1015610b045760405162461bcd60e51b815260206004820152602d60248201527f43616e6e6f74207265647563652063757272656e74207969656c6420636f6e7460448201527f72616374206475726174696f6e000000000000000000000000000000000000006064820152608401610501565b6004544210610b2357610b178284611447565b60055542600355610b60565b5f42600454610b329190611434565b90505f60055482610b439190611466565b905083610b508287611421565b610b5a9190611447565b60055550505b6040516370a0823160e01b81523060048201525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610bc4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610be891906113d7565b9050610bf48382611447565b6005541115610c455760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152606401610501565b426006819055610c56908490611421565b60045560405184815233907fac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e299060200160405180910390a250505050565b5f610c9d611231565b600280545f90915560405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303815f875af1158015610d31573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d5591906113ee565b506040518181526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169033907f1314fd112a381beea61539dbd21ec04afcff2662ac7d1b83273aade1f53d1b979060200160405180910390a3905090565b5f6001545f03610dcc575060075490565b600154600554600654610ddd61099a565b610de79190611434565b610df19190611466565b610e0390670de0b6b3a7640000611466565b610e0d9190611447565b6007546109ad9190611421565b6001600160a01b0381165f908152600e6020908152604080832054600d909252822054670de0b6b3a764000090610e4f610dbb565b610e599190611434565b6001600160a01b0385165f908152600f6020526040902054610e7b9190611466565b610e859190611447565b610e8f9190611421565b92915050565b33610e9e610dbb565b600755610ea961099a565b6006556001600160a01b03811615610f3557335f9081526010602052604090205460035481108015610ee85750335f908152600f602052604090205415155b15610f0057600354335f908152601060205260409020555b610f0982610e1a565b6001600160a01b0383165f908152600e6020908152604080832093909355600754600d90915291902055505b335f908152600f6020908152604080832054600e909252909120548115610f7f57335f908152600f6020526040812081905560018054849290610f79908490611434565b90915550505b8015610fa157335f908152600e6020526040812055610f9e8183611421565b91505b815f03610fad57505050565b610fb7338361107a565b5060405181815233907f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc99060200161079e565b50565b610ff5611231565b6001600160a01b0381166110715760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610501565b610fea8161128a565b335f908152601060205260408120546110d55760405162461bcd60e51b815260206004820152600b60248201527f4e6f7420696e20706f6f6c0000000000000000000000000000000000000000006044820152606401610501565b335f908152601060205260408120546110ee9042611434565b90505f60146110fc836112f1565b6111069190611421565b90505f6127106111168387611466565b6111209190611447565b61112a9086611434565b90506111368186611434565b60025f8282546111469190611421565b909155505060405163a9059cbb60e01b81526001600160a01b038781166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303815f875af11580156111b7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111db91906113ee565b5060408051868152602081018490529081018290526001600160a01b038716907f18fa25e22e0f1f39ef2130081363ba86a1259e598e669558683dabfc15bfe7319060600160405180910390a250949350505050565b5f546001600160a01b031633146109d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610501565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60045442106113035750600a919050565b5f5b600581101561136a57600881600581106113215761132161147d565b01548310156113585760115f600883600581106113405761134061147d565b015481526020019081526020015f2054915050919050565b8061136281611491565b915050611305565b50600a92915050565b5f60208284031215611383575f80fd5b81356001600160a01b0381168114611399575f80fd5b9392505050565b5f602082840312156113b0575f80fd5b5035919050565b5f80604083850312156113c8575f80fd5b50508035926020909101359150565b5f602082840312156113e7575f80fd5b5051919050565b5f602082840312156113fe575f80fd5b81518015158114611399575f80fd5b634e487b7160e01b5f52601160045260245ffd5b80820180821115610e8f57610e8f61140d565b81810381811115610e8f57610e8f61140d565b5f8261146157634e487b7160e01b5f52601260045260245ffd5b500490565b8082028115828204841417610e8f57610e8f61140d565b634e487b7160e01b5f52603260045260245ffd5b5f600182016114a2576114a261140d565b506001019056fea2646970667358221220d332371e2a6adfe84f226aeb296f114fdd75b5dce0cc4f36c6ea91824917e56564736f6c63430008150033";

type KannaYieldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KannaYieldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KannaYield__factory extends ContractFactory {
  constructor(...args: KannaYieldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _knnToken: PromiseOrValue<string>,
    _feeRecipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KannaYield> {
    return super.deploy(
      _knnToken,
      _feeRecipient,
      overrides || {}
    ) as Promise<KannaYield>;
  }
  override getDeployTransaction(
    _knnToken: PromiseOrValue<string>,
    _feeRecipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _knnToken,
      _feeRecipient,
      overrides || {}
    );
  }
  override attach(address: string): KannaYield {
    return super.attach(address) as KannaYield;
  }
  override connect(signer: Signer): KannaYield__factory {
    return super.connect(signer) as KannaYield__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KannaYieldInterface {
    return new utils.Interface(_abi) as KannaYieldInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KannaYield {
    return new Contract(address, _abi, signerOrProvider) as KannaYield;
  }
}
